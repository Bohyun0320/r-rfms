@import url("./font.css");
.process {
  /*centering*/
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
  border-radius: 5px;
  /*Lets add the numbers for each link using CSS counters. flag is the name of the counter. to be defined using counter-reset in the parent element of the links*/
  counter-reset: flag;
  margin: 10px 0;
}

.process a {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  text-decoration: none;
  outline: none;
  display: block;
  float: left;
  font-size: 12px;
  line-height: 36px;
  color: white;
  /*need more margin on the left of links to accomodate the numbers*/
  padding: 0 10px 0 60px;
  position: relative;
  background: #eeeeee;
  color: black;
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

/*since the first link does not have a triangle before it we can reduce the left padding to make it look consistent with other links*/
.process a:first-child {
  padding-left: 40px;
  border-radius: 5px 0 0 5px;
  /*to match with the parent's radius*/
}

.process a:first-child:before {
  left: 14px;
}

.process a:last-child {
  border-radius: 0 5px 5px 0;
  /*this was to prevent glitches on hover*/
  padding-right: 20px;
}

/*hover/active styles*/
.process a.active, .process a:hover {
  background: #61D1C5;
  color: white;
}

.process a.active:hover {
  background: #eeeeee;
  color: black;
}

.process a.active:after, .process a:hover:after {
  background: #61D1C5;
  color: white;
}

.process a.active:hover:after {
  background: #eeeeee;
  color: black;
}

/*adding the arrows for the processs using rotated pseudo elements*/
.process a:after {
  content: '';
  position: absolute;
  top: 0;
  right: -18px;
  /*half of square's length*/
  /*same dimension as the line-height of .process a */
  width: 36px;
  height: 36px;
  /*as you see the rotated square takes a larger height. which makes it tough to position it properly. So we are going to scale it down so that the diagonals become equal to the line-height of the link. We scale it to 70.7% because if square's: 
	length = 1; diagonal = (1^2 + 1^2)^0.5 = 1.414 (pythagoras theorem)
	if diagonal required = 1; length = 1/1.414 = 0.707*/
  -webkit-transform: scale(0.707) rotate(45deg);
          transform: scale(0.707) rotate(45deg);
  /*we need to prevent the arrows from getting buried under the next link*/
  z-index: 1;
  /*background same as links but the gradient will be rotated to compensate with the transform applied*/
  /*stylish arrow design using box shadow*/
  -webkit-box-shadow: 3px -3px 0 3px white;
          box-shadow: 3px -3px 0 3px white;
  /*
		5px - for rounded arrows and 
		50px - to prevent hover glitches on the border created using shadows*/
  border-radius: 0 5px 0 50px;
  background: #eeeeee;
  color: black;
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

/*we dont need an arrow after the last link*/
.process a:last-child:after {
  content: none;
}

/*we will use the :before element to show numbers*/
.process a:before {
  content: counter(flag);
  counter-increment: flag;
  /*some styles now*/
  border-radius: 100%;
  width: 20px;
  height: 20px;
  line-height: 20px;
  margin: 8px 0;
  text-align: center;
  position: absolute;
  top: 0;
  left: 30px;
  background: -webkit-gradient(linear, left top, left bottom, from(#444), to(#222));
  background: linear-gradient(#444, #222);
  font-weight: bold;
  background: white;
  color: #999999;
  -webkit-box-shadow: 0 0 0 2px #bbbbbb;
          box-shadow: 0 0 0 2px #bbbbbb;
}

.process a.active:before {
  -webkit-box-shadow: 0 0 0 2px #3cbcad;
          box-shadow: 0 0 0 2px #3cbcad;
  color: #3cbcad;
}

.process a .process-info {
  width: 100%;
  position: absolute;
  text-align: center;
  left: 0px;
  bottom: -40px;
  color: #222;
  line-height: 120%;
}

.process-has-info {
  overflow: visible;
  margin-bottom: 40px;
}
